


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             SymmDiff, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000 E59F00CC        LDR              R0, =ASize  ;address countA =AS
                                                            ize
    7 00000004 E5900000        LDR              R0, [R0]    ;countA = load addr
                                                            ess countA
    8 00000008 E59F20C8        LDR              R2, =AElems ;address numberA = 
                                                            AElems
    9 0000000C E59FB0C8        LDR              R11, =CElems ;address numberC =
                                                             CElems
   10 00000010 E59FA0C8        LDR              R10, =CSize ;address countC = C
                                                            Size
   11 00000014 E59A9000        LDR              R9, [R10]   ;countC = load addr
                                                            ess countC
   12 00000018 E3A07001        LDR              R7, =1      ;
   13 0000001C E3A08000        LDR              R8, =0      ;swap value = 0
   14 00000020         while                                ;while(countA>0)
   15 00000020 E3500000        CMP              R0, #0      ;{
   16 00000024 0A000019        BEQ              endwhile    ; 
   17 00000028 E5924000        LDR              R4, [R2]    ; numberA = load ad
                                                            dress numberA
   18 0000002C E59F10B0        LDR              R1, =BSize  ; address countB = 
                                                            BSize
   19 00000030 E5911000        LDR              R1, [R1]    ; countB = load add
                                                            ress countB
   20 00000034 E59F30AC        LDR              R3, =BElems ; address numberB =
                                                             BElems
   21 00000038         while2                               ; while(countB>0)
   22 00000038 E3510000        CMP              R1, #0      ; {
   23 0000003C 0A000005        BEQ              endwhile2   ;  
   24 00000040 E5935000        LDR              R5, [R3]    ;  numberB = load a
                                                            ddress numberB
   25 00000044 E1540005        CMP              R4, R5      ;  if ( numberA == 
                                                            numberB )
   26 00000048 0A000008        BEQ              sameValues  ;   go to sameValue
                                                            s
   27 0000004C E2411001        SUB              R1, R1, #1  ;  else{ countB = c
                                                            ountB - 1
   28 00000050 E2833004        ADD              R3, R3, #4  ;   address numberB
                                                             +=4 
   29 00000054 EAFFFFF7        B                while2      ; }
   30 00000058         endwhile2                            ; if (swap value !=
                                                             0 )
   31 00000058 E2899001        ADD              R9, R9, #1  ; countC +=1
   32 0000005C E58B4000        STR              R4, [R11]   ; address numberC =
                                                             store numberA
   33 00000060 E28BB004        ADD              R11, R11, #4 ; address numberC 
                                                            +=4
   34 00000064 E2400001        SUB              R0, R0, #1  ; countA = countA -
                                                             1
   35 00000068 E2822004        ADD              R2, R2, #4  ; address numberA +
                                                            =4
   36 0000006C EAFFFFEB        B                while       ; go to 
   37 00000070         sameValues                           ;
   38 00000070 E3570000        CMP              R7, #0      ;
   39 00000074 0A000001        BEQ              replaceValues ;



ARM Macro Assembler    Page 2 


   40 00000078 E3A07000        LDR              R7, =0      ;  
   41 0000007C E1A08005        MOV              R8, R5      ;  swap value = num
                                                            berB
   42 00000080         replaceValues                        ;
   43 00000080 E5838000        STR              R8, [R3]    ; address numberB =
                                                             store swap value
   44 00000084 E2400001        SUB              R0, R0, #1  ; countA = countA -
                                                             1
   45 00000088 E2822004        ADD              R2, R2, #4  ; address numberA +
                                                            =4
   46 0000008C EAFFFFE3        B                while       ; go to first loop
   47 00000090         endwhile                             ;}
   48 00000090 E59F104C        LDR              R1, =BSize  ;address countB = B
                                                            Size
   49 00000094 E59F304C        LDR              R3, =BElems ;address numberB = 
                                                            BElems
   50 00000098 E5911000        LDR              R1, [R1]    ;countB = load addr
                                                            ess countB
   51 0000009C         loop                                 ;while ( countB > 0
                                                            )
   52 0000009C E3510000        CMP              R1, #0      ;{
   53 000000A0 0A000008        BEQ              end         ; 
   54 000000A4 E5935000        LDR              R5, [R3]    ; numberB = load ad
                                                            dress numberB
   55 000000A8 E1550008        CMP              R5, R8      ; if ( numberB == s
                                                            wap value ) 
   56 000000AC 0A000002        BEQ              else        ;  do nothing
   57 000000B0 E2899001        ADD              R9, R9, #1  ; else { countC +=1
                                                            
   58 000000B4 E58B5000        STR              R5, [R11]   ;  address numberC 
                                                            = store numberB
   59 000000B8 E28BB004        ADD              R11,  R11, #4 ;  address number
                                                            C +=4
   60 000000BC         else                                 ; }
   61 000000BC E2833004        ADD              R3, R3, #4  ; address numberB +
                                                            =4
   62 000000C0 E2411001        SUB              R1, R1, #1  ; countB = countB -
                                                             1
   63 000000C4 EAFFFFF4        B                loop        ;} 
   64 000000C8         end                                  ;
   65 000000C8 E59FB00C        LDR              R11, =CElems ;address numberC =
                                                             CElems
   66 000000CC E58A9000        STR              R9, [R10]   ;CSize = store coun
                                                            tC 
   67 000000D0 EAFFFFFE 
                       stop    B                stop        ;
   68 000000D4         
   69 000000D4         
   70 000000D4 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000         AREA             TestData, DATA, READWRITE
   71 00000000         
   72 00000000 00000003 



ARM Macro Assembler    Page 3 


                       ASize   DCD              3           ; Number of element
                                                            s in A
   73 00000004 00000002 
              00000003 
              00000005 AElems  DCD              2,3,5       ; Elements of A
   74 00000010         
   75 00000010 00000004 
                       BSize   DCD              4           ; Number of element
                                                            s in B
   76 00000014 00000001 
              00000001 
              00000002 
              00000006 BElems  DCD              1,1,2,6     ; Elements of B
   77 00000024         
   78 00000024 00000000 
                       CSize   DCD              0           ; Number of element
                                                            s in C
   79 00000028 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    CElems  SPACE            56          ; Elements of C
   80 00000060         
   81 00000060                 END
Command Line: --debug --xref --apcs=interwork --depend=.\symmdiff.d -o.\symmdif
f.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philip
s --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="NO_C
LOCK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SE
TA 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\symmdif
f.lst SymmDiff.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SymmDiff 00000000

Symbol: SymmDiff
   Definitions
      At line 1 in file SymmDiff.s
   Uses
      None
Comment: SymmDiff unused
else 000000BC

Symbol: else
   Definitions
      At line 60 in file SymmDiff.s
   Uses
      At line 56 in file SymmDiff.s
Comment: else used once
end 000000C8

Symbol: end
   Definitions
      At line 64 in file SymmDiff.s
   Uses
      At line 53 in file SymmDiff.s
Comment: end used once
endwhile 00000090

Symbol: endwhile
   Definitions
      At line 47 in file SymmDiff.s
   Uses
      At line 16 in file SymmDiff.s
Comment: endwhile used once
endwhile2 00000058

Symbol: endwhile2
   Definitions
      At line 30 in file SymmDiff.s
   Uses
      At line 23 in file SymmDiff.s
Comment: endwhile2 used once
loop 0000009C

Symbol: loop
   Definitions
      At line 51 in file SymmDiff.s
   Uses
      At line 63 in file SymmDiff.s
Comment: loop used once
replaceValues 00000080

Symbol: replaceValues
   Definitions
      At line 42 in file SymmDiff.s
   Uses
      At line 39 in file SymmDiff.s
Comment: replaceValues used once
sameValues 00000070

Symbol: sameValues



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 37 in file SymmDiff.s
   Uses
      At line 26 in file SymmDiff.s
Comment: sameValues used once
start 00000000

Symbol: start
   Definitions
      At line 5 in file SymmDiff.s
   Uses
      At line 3 in file SymmDiff.s
Comment: start used once
stop 000000D0

Symbol: stop
   Definitions
      At line 67 in file SymmDiff.s
   Uses
      At line 67 in file SymmDiff.s
Comment: stop used once
while 00000020

Symbol: while
   Definitions
      At line 14 in file SymmDiff.s
   Uses
      At line 36 in file SymmDiff.s
      At line 46 in file SymmDiff.s

while2 00000038

Symbol: while2
   Definitions
      At line 21 in file SymmDiff.s
   Uses
      At line 29 in file SymmDiff.s
Comment: while2 used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AElems 00000004

Symbol: AElems
   Definitions
      At line 73 in file SymmDiff.s
   Uses
      At line 8 in file SymmDiff.s
Comment: AElems used once
ASize 00000000

Symbol: ASize
   Definitions
      At line 72 in file SymmDiff.s
   Uses
      At line 6 in file SymmDiff.s
Comment: ASize used once
BElems 00000014

Symbol: BElems
   Definitions
      At line 76 in file SymmDiff.s
   Uses
      At line 20 in file SymmDiff.s
      At line 49 in file SymmDiff.s

BSize 00000010

Symbol: BSize
   Definitions
      At line 75 in file SymmDiff.s
   Uses
      At line 18 in file SymmDiff.s
      At line 48 in file SymmDiff.s

CElems 00000028

Symbol: CElems
   Definitions
      At line 79 in file SymmDiff.s
   Uses
      At line 9 in file SymmDiff.s
      At line 65 in file SymmDiff.s

CSize 00000024

Symbol: CSize
   Definitions
      At line 78 in file SymmDiff.s
   Uses
      At line 10 in file SymmDiff.s
Comment: CSize used once
TestData 00000000

Symbol: TestData
   Definitions
      At line 70 in file SymmDiff.s
   Uses
      None
Comment: TestData unused



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file SymmDiff.s
   Uses
      None
Comment: main unused
1 symbol
359 symbols in table
