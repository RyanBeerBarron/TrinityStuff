


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Anagram, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000 E59F1098        LDR              R1, =stringA 
                                                            ;addressA = stringA
                                                            
    7 00000004 E59F2098        LDR              R2, =stringB 
                                                            ;addressB = stringB
                                                            
    8 00000008         while                                ;while (letterA != 
                                                            0 )
    9 00000008 E5D13000        LDRB             R3, [R1]    ;{ 
   10 0000000C E3530000        CMP              R3, #0      ; letterA = load.by
                                                            te ascii character 
                                                            code in addressA
   11 00000010 0A00001E        BEQ              endwhile    ; 
   12 00000014 E3530020        CMP              R3, #0x20   ; if (letterA == sp
                                                            acebar ) 
   13 00000018 0A00001A        BEQ              spacebar    ;  go to spacebar
   14 0000001C E59F2080        LDR              R2, =stringB ; addressB = strin
                                                            gB
   15 00000020 E5D24000        LDRB             R4, [R2]    ; letterB = load.by
                                                            te ascii character 
                                                            code in addressB
   16 00000024 E3530041        CMP              R3, #0x41   ; if ( letterA >= '
                                                            A' && letterA <= 'Z
                                                            ' )
   17 00000028 3A000002        BLO              else1       ;  letterA += 0x20
   18 0000002C E353005A        CMP              R3, #0x5A   ; 
   19 00000030 8A000000        BHI              else1       ;
   20 00000034 E2833020        ADD              R3, R3, #0x20 ;
   21 00000038         else1                                ;
   22 00000038         while2                               ; while ( letterB !
                                                            = 0)
   23 00000038 E3540000        CMP              R4, #0      ; {
   24 0000003C 0A000015        BEQ              endAll      ;  if ( letterB != 
                                                            spacebar && letterB
                                                             != full stop && le
                                                            tterB >= 'A' && let
                                                            terB <= 'Z' )  
   25 00000040 E3540020        CMP              R4, #0x20   ;  
   26 00000044 0A000006        BEQ              else2       ;
   27 00000048 E354002E        CMP              R4, #0x2E   ;
   28 0000004C 0A000004        BEQ              else2       ;
   29 00000050 E3540041        CMP              R4, #0x41   ;
   30 00000054 3A000002        BLO              else2       ;
   31 00000058 E354005A        CMP              R4, #0x5A   ;
   32 0000005C 8A000000        BHI              else2       ;
   33 00000060 E2844020        ADD              R4, R4, #0x20 
                                                            ;   letterB += 0x20
                                                            
   34 00000064         else2                                ; 
   35 00000064 E1530004        CMP              R3, R4      ;  if ( letterA != 
                                                            letterB ) 
   36 00000068 0A000002        BEQ              sameLetter  ;  { 
   37 0000006C E2822001        ADD              R2, R2, #1  ;   addressB += 1
   38 00000070 E5D24000        LDRB             R4, [R2]    ;   letterB = load.



ARM Macro Assembler    Page 2 


                                                            byte ascii characte
                                                            r code in addressB
   39 00000074 EAFFFFEF        B                while2      ;  }
   40 00000078         sameLetter                           ;  else
   41 00000078 E3A0402E        LDR              R4, =0x2E   ;  { letterB = full
                                                             stop
   42 0000007C E5C24000        STRB             R4, [R2]    ;   addressB = stor
                                                            e letterB
   43 00000080 E2811001        ADD              R1, R1, #1  ;   addressA += 1
   44 00000084 EAFFFFDF        B                while       ;  }
   45 00000088         spacebar                             ;  if ( letterA == 
                                                            spacebar )
   46 00000088 E2811001        ADD              R1, R1, #1  ;  { addressA += 1
   47 0000008C EAFFFFDD        B                while       ;  }
   48 00000090         endwhile                             ;
   49 00000090 E3A00001        LDR              R0, =1      ;anagram = true  
   50 00000094 EA000000        B                stop        ;
   51 00000098         endAll                               ;anagram = false   
                                                              
   52 00000098 E3A00000        LDR              R0, =0
   53 0000009C EAFFFFFE 
                       stop    B                stop
   54 000000A0         
   55 000000A0         
   56 000000A0         
   57 000000A0 00000000 
              00000000 
              00000000         AREA             TestData, DATA, READWRITE
   58 00000000         
   59 00000000 4D 6F 74 
              68 65 72 
              2D 69 6E 
              2D 6C 61 
              77 00    stringA DCB              "Mother-in-law",0
   60 0000000E 48 69 74 
              6C 65 72 
              20 77 6F 
              6D 61 6E 
              00       stringB DCB              "Hitler woman",0
   61 0000001B         
   62 0000001B                 END
Command Line: --debug --xref --apcs=interwork --depend=.\anagram.d -o.\anagram.
o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips 
--predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="NO_CLO
CK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA
 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\anagram.l
st Anagram.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Anagram 00000000

Symbol: Anagram
   Definitions
      At line 1 in file Anagram.s
   Uses
      None
Comment: Anagram unused
else1 00000038

Symbol: else1
   Definitions
      At line 21 in file Anagram.s
   Uses
      At line 17 in file Anagram.s
      At line 19 in file Anagram.s

else2 00000064

Symbol: else2
   Definitions
      At line 34 in file Anagram.s
   Uses
      At line 26 in file Anagram.s
      At line 28 in file Anagram.s
      At line 30 in file Anagram.s
      At line 32 in file Anagram.s

endAll 00000098

Symbol: endAll
   Definitions
      At line 51 in file Anagram.s
   Uses
      At line 24 in file Anagram.s
Comment: endAll used once
endwhile 00000090

Symbol: endwhile
   Definitions
      At line 48 in file Anagram.s
   Uses
      At line 11 in file Anagram.s
Comment: endwhile used once
sameLetter 00000078

Symbol: sameLetter
   Definitions
      At line 40 in file Anagram.s
   Uses
      At line 36 in file Anagram.s
Comment: sameLetter used once
spacebar 00000088

Symbol: spacebar
   Definitions
      At line 45 in file Anagram.s
   Uses
      At line 13 in file Anagram.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: spacebar used once
start 00000000

Symbol: start
   Definitions
      At line 5 in file Anagram.s
   Uses
      At line 3 in file Anagram.s
Comment: start used once
stop 0000009C

Symbol: stop
   Definitions
      At line 53 in file Anagram.s
   Uses
      At line 50 in file Anagram.s
      At line 53 in file Anagram.s

while 00000008

Symbol: while
   Definitions
      At line 8 in file Anagram.s
   Uses
      At line 44 in file Anagram.s
      At line 47 in file Anagram.s

while2 00000038

Symbol: while2
   Definitions
      At line 22 in file Anagram.s
   Uses
      At line 39 in file Anagram.s
Comment: while2 used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

TestData 00000000

Symbol: TestData
   Definitions
      At line 57 in file Anagram.s
   Uses
      None
Comment: TestData unused
stringA 00000000

Symbol: stringA
   Definitions
      At line 59 in file Anagram.s
   Uses
      At line 6 in file Anagram.s
Comment: stringA used once
stringB 0000000E

Symbol: stringB
   Definitions
      At line 60 in file Anagram.s
   Uses
      At line 7 in file Anagram.s
      At line 14 in file Anagram.s

3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file Anagram.s
   Uses
      None
Comment: main unused
1 symbol
354 symbols in table
