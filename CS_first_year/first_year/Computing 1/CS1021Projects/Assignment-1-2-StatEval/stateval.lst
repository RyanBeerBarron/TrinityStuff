


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             StatEval, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 IMPORT           getkey
    4 00000000                 IMPORT           sendchar
    5 00000000                 EXPORT           start
    6 00000000                 PRESERVE8
    7 00000000         
    8 00000000         start
    9 00000000 E3A0600A        LDR              R6, =10     ; constant = 10
   10 00000004 E3A07000        LDR              R7, =0      ; count = 0
   11 00000008 E3A08000        LDR              R8, =0      ; sum = 0
   12 0000000C E59F90C8        LDR              R9, =0x7FFFFFFF 
                                                            ; min = (2^31)-1 
   13 00000010 E3A0A102        LDR              R10, =0x80000000 
                                                            ; max = -(2^31)
   14 00000014         endspacebar
   15 00000014 E3A04000        LDR              R4, =0      ; number = 0
   16 00000018 E3A0B001        LDR              R11, =1     ; positiveNumber = 
                                                            1
   17 0000001C         read
   18 0000001C EBFFFFFE        BL               getkey      ; read key from con
                                                            sole
   19 00000020 E350000D        CMP              R0, #0x0D   ; while (key != CR)
                                                            
   20 00000024 0A00000B        BEQ              endRead     ; {
   21 00000028 EBFFFFFE        BL               sendchar    ;   echo key back t
                                                            o console
   22 0000002C E350002D        CMP              R0, #0x2D   ; if ( key == "-") 
                                                            
   23 00000030 1A000001        BNE              positiveValue ; { 
   24 00000034 E3A0B000        LDR              R11, =0     ;  positiveNumber =
                                                             0
   25 00000038 EAFFFFF7        B                read        ;  get next key
   26 0000003C         positiveValue                        ; }
   27 0000003C E1A05000        MOV              R5, R0      ; singledigit = key
                                                            
   28 00000040 E3550020        CMP              R5, #0x20   ;  if (singledigit 
                                                            != spacebar)
   29 00000044 0A000005        BEQ              spacebar    ;  {
   30 00000048 E0040496        MUL              R4, R6, R4  ;  number = number 
                                                            * constant
   31 0000004C E2455030        SUB              R5, R5, #0x30 ;  singledigit = 
                                                            singledigit - ASCII
                                                             conversion
   32 00000050 E0844005        ADD              R4, R4, R5  ;  number = number 
                                                            + singledigit
   33 00000054         ; } else break
   34 00000054 EAFFFFF0        B                read        ; }
   35 00000058         endRead                              ; if (key == CR )
   36 00000058 E3A05000        MOV              R5, #0      ; quotient = 0
   37 0000005C E3A06000        MOV              R6, #0      ; remainder = 0 
   38 00000060         spacebar                             ;
   39 00000060 E35B0000        CMP              R11, #0     ; if ( positiveNumb
                                                            er == 0 )
   40 00000064 1A000000        BNE              notNegative ; {
   41 00000068 E04B4004        SUB              R4, R11, R4 ;  number = 0 - num
                                                            ber
   42 0000006C         notNegative                          ; }
   43 0000006C E2877001        ADD              R7, R7, #1  ; count += 1 



ARM Macro Assembler    Page 2 


   44 00000070 E0888004        ADD              R8, R8, R4  ; sum += number
   45 00000074 E1540009        CMP              R4, R9      ; if ( number < min
                                                             )
   46 00000078 CA000000        BGT              notLower    ; {
   47 0000007C E1A09004        MOV              R9, R4      ;  min = number
   48 00000080         notLower                             ; }
   49 00000080 E154000A        CMP              R4, R10     ; if ( number > max
                                                             )
   50 00000084 BA000000        BLT              notHigher   ; { 
   51 00000088 E1A0A004        MOV              R10, R4     ;  max = number
   52 0000008C         notHigher                            ; } 
   53 0000008C E350000D        CMP              R0, #0x0D   ; if (key == CR)
   54 00000090 0A000000        BEQ              mean        ; stop reading, com
                                                            pute mean 
   55 00000094 EAFFFFDE        B                endspacebar ; else get next key
                                                            
   56 00000098         mean                                 ;
   57 00000098 E3A0B001        LDR              R11, =1     ; positiveNumber = 
                                                            1
   58 0000009C E04A4009        SUB              R4, R10, R9 ; range = max - min
                                                            
   59 000000A0 E1A06008        MOV              R6, R8      ; remainder = quoti
                                                            ent
   60 000000A4 E3560102        CMP              R6, #0x80000000 ; if ( remainde
                                                            r >= 2^31 )
   61 000000A8 3A000001        BLO              while       ; {
   62 000000AC E3A0B000        LDR              R11, =0     ;  positiveNumber =
                                                             0
   63 000000B0 E04B6006        SUB              R6, R11, R6 ; remainder = 0 - r
                                                            emainder
   64 000000B4         while                                ;} else
   65 000000B4 E1570006        CMP              R7, R6      ;while ( remainder 
                                                            >= count )
   66 000000B8 CA000002        BGT              endwhile    ;{
   67 000000BC E0466007        SUB              R6, R6, R7  ; remainder = remai
                                                            nder - count
   68 000000C0 E2855001        ADD              R5, R5, #1  ; quotient = quotie
                                                            nt + 1
   69 000000C4 EAFFFFFA        B                while       ;}
   70 000000C8         endwhile
   71 000000C8 E35B0000        CMP              R11, #0     ; if ( positiveNumb
                                                            er == 0)
   72 000000CC 1A000001        BNE              stop        ; {
   73 000000D0 E04B6006        SUB              R6, R11, R6 ; remainder = 0 - r
                                                            emainder
   74 000000D4 E04B5005        SUB              R5, R11, R5 ; quotient = 0 - qu
                                                            otient }
   75 000000D8 EAFFFFFE 
                       stop    B                stop
   76 000000DC         
   77 000000DC                 END
              7FFFFFFF 
Command Line: --debug --xref --apcs=interwork --depend=.\stateval.d -o.\stateva
l.o -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\Philip
s --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="NO_C
LOCK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SE
TA 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\stateva
l.lst StatEval.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

StatEval 00000000

Symbol: StatEval
   Definitions
      At line 1 in file StatEval.s
   Uses
      None
Comment: StatEval unused
endRead 00000058

Symbol: endRead
   Definitions
      At line 35 in file StatEval.s
   Uses
      At line 20 in file StatEval.s
Comment: endRead used once
endspacebar 00000014

Symbol: endspacebar
   Definitions
      At line 14 in file StatEval.s
   Uses
      At line 55 in file StatEval.s
Comment: endspacebar used once
endwhile 000000C8

Symbol: endwhile
   Definitions
      At line 70 in file StatEval.s
   Uses
      At line 66 in file StatEval.s
Comment: endwhile used once
mean 00000098

Symbol: mean
   Definitions
      At line 56 in file StatEval.s
   Uses
      At line 54 in file StatEval.s
Comment: mean used once
notHigher 0000008C

Symbol: notHigher
   Definitions
      At line 52 in file StatEval.s
   Uses
      At line 50 in file StatEval.s
Comment: notHigher used once
notLower 00000080

Symbol: notLower
   Definitions
      At line 48 in file StatEval.s
   Uses
      At line 46 in file StatEval.s
Comment: notLower used once
notNegative 0000006C

Symbol: notNegative



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 42 in file StatEval.s
   Uses
      At line 40 in file StatEval.s
Comment: notNegative used once
positiveValue 0000003C

Symbol: positiveValue
   Definitions
      At line 26 in file StatEval.s
   Uses
      At line 23 in file StatEval.s
Comment: positiveValue used once
read 0000001C

Symbol: read
   Definitions
      At line 17 in file StatEval.s
   Uses
      At line 25 in file StatEval.s
      At line 34 in file StatEval.s

spacebar 00000060

Symbol: spacebar
   Definitions
      At line 38 in file StatEval.s
   Uses
      At line 29 in file StatEval.s
Comment: spacebar used once
start 00000000

Symbol: start
   Definitions
      At line 8 in file StatEval.s
   Uses
      At line 5 in file StatEval.s
Comment: start used once
stop 000000D8

Symbol: stop
   Definitions
      At line 75 in file StatEval.s
   Uses
      At line 72 in file StatEval.s
      At line 75 in file StatEval.s

while 000000B4

Symbol: while
   Definitions
      At line 64 in file StatEval.s
   Uses
      At line 61 in file StatEval.s
      At line 69 in file StatEval.s

14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

getkey 00000000

Symbol: getkey
   Definitions
      At line 3 in file StatEval.s
   Uses
      At line 18 in file StatEval.s
Comment: getkey used once
main 00000000

Symbol: main
   Definitions
      At line 2 in file StatEval.s
   Uses
      None
Comment: main unused
sendchar 00000000

Symbol: sendchar
   Definitions
      At line 4 in file StatEval.s
   Uses
      At line 21 in file StatEval.s
Comment: sendchar used once
3 symbols
356 symbols in table
