


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Closure, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000 E59F1074        LDR              R1, =ASize  ; address count1 = 
                                                            ASize
    7 00000004 E59F2074        LDR              R2, =AElems ; address = AElems
    8 00000008 E5913000        LDR              R3, [R1]    ; count loop1 = loa
                                                            d address count1
    9 0000000C E3A08000        LDR              R8, =0      ; closed element = 
                                                            0
   10 00000010         while
   11 00000010 E3530000        CMP              R3, #0      ; while ( count loo
                                                            p1 > 0 )
   12 00000014 0A000014        BEQ              endwhile    ; {
   13 00000018 E5924000        LDR              R4, [R2]    ;  number1 = word s
                                                            ize number at addre
                                                            ss1
   14 0000001C E3540000        CMP              R4, #0      ;  if ( number 1 ==
                                                             0 )
   15 00000020 0A00000C        BEQ              endwhile2   ;   do nothing
   16 00000024 E1A05002        MOV              R5, R2      ;  else {  address 
                                                            2 = address 1
   17 00000028 E1A07003        MOV              R7, R3      ;    count loop2 = 
                                                            count loop1
   18 0000002C         while2                               ;    while ( count 
                                                            loop2 > 0 )
   19 0000002C E2477001        SUB              R7, R7, #1  ;    {
   20 00000030 E3570000        CMP              R7, #0      ;     count loop2 =
                                                             count loop2 - 1
   21 00000034 0A00000E        BEQ              endall      ;     if ( count lo
                                                            op2 == 0 )
   22 00000038 E2855004        ADD              R5, R5, #4  ;      set closure 
                                                            = false
   23 0000003C E5956000        LDR              R6, [R5]    ;     number2 = wor
                                                            d size number at ad
                                                            dress2
   24 00000040 E3560000        CMP              R6, #0      ;     if ( number2 
                                                            == 0)
   25 00000044 0AFFFFF8        BEQ              while2      ;      do nothing
   26 00000048 E0860004        ADD              R0, R6, R4  ;     else if ( num
                                                            ber1 + number2 == 0
                                                             ) 
   27 0000004C E3500000        CMP              R0, #0      ;      break from l
                                                            oop2
   28 00000050 0A000000        BEQ              endwhile2   ;    }
   29 00000054 EAFFFFF4        B                while2      ;    }
   30 00000058         endwhile2                            ;   
   31 00000058 E5858000        STR              R8, [R5]    ;  number2 = 0
   32 0000005C E5828000        STR              R8, [R2]    ;  number1 = 0
   33 00000060 E2433001        SUB              R3, R3, #1  ;  count loop1 - 1
   34 00000064 E2822004        ADD              R2, R2, #4  ;  address1 +4
   35 00000068 EAFFFFE8        B                while       ; }
   36 0000006C         endwhile                             ; 
   37 0000006C E3A00001        LDR              R0, =1      ;set closure = true
                                                            
   38 00000070 EA000000        B                stop        ;
   39 00000074         endall                               ;



ARM Macro Assembler    Page 2 


   40 00000074 E3A00000        LDR              R0, =0      ;set closure = fals
                                                            e
   41 00000078 EAFFFFFE 
                       stop    B                stop
   42 0000007C         
   43 0000007C         
   44 0000007C 00000000 
              00000000         AREA             TestData, DATA, READWRITE
   45 00000000         
   46 00000000 0000000C 
                       ASize   DCD              12          ; Number of element
                                                            s in A
   47 00000004 00000005 
              00000004 
              FFFFFFFA 
              FFFFFFFC 
              00000003 
              FFFFFFF8 
              00000008 
              00000006 
              FFFFFFFD 
              FFFFFFFB 
              00000007 
              00000009 AElems  DCD              +5,+4,-6,-4,+3,-8,+8,+6,-3,-5,+
7,+9 
                                                            ; Elements of A
   48 00000034         
   49 00000034                 END
Command Line: --debug --xref --apcs=interwork --depend=.\closure.d -o.\closure.
o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips 
--predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="NO_CLO
CK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA
 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\closure.l
st Closure.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Closure 00000000

Symbol: Closure
   Definitions
      At line 1 in file Closure.s
   Uses
      None
Comment: Closure unused
endall 00000074

Symbol: endall
   Definitions
      At line 39 in file Closure.s
   Uses
      At line 21 in file Closure.s
Comment: endall used once
endwhile 0000006C

Symbol: endwhile
   Definitions
      At line 36 in file Closure.s
   Uses
      At line 12 in file Closure.s
Comment: endwhile used once
endwhile2 00000058

Symbol: endwhile2
   Definitions
      At line 30 in file Closure.s
   Uses
      At line 15 in file Closure.s
      At line 28 in file Closure.s

start 00000000

Symbol: start
   Definitions
      At line 5 in file Closure.s
   Uses
      At line 3 in file Closure.s
Comment: start used once
stop 00000078

Symbol: stop
   Definitions
      At line 41 in file Closure.s
   Uses
      At line 38 in file Closure.s
      At line 41 in file Closure.s

while 00000010

Symbol: while
   Definitions
      At line 10 in file Closure.s
   Uses
      At line 35 in file Closure.s
Comment: while used once
while2 0000002C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: while2
   Definitions
      At line 18 in file Closure.s
   Uses
      At line 25 in file Closure.s
      At line 29 in file Closure.s

8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AElems 00000004

Symbol: AElems
   Definitions
      At line 47 in file Closure.s
   Uses
      At line 7 in file Closure.s
Comment: AElems used once
ASize 00000000

Symbol: ASize
   Definitions
      At line 46 in file Closure.s
   Uses
      At line 6 in file Closure.s
Comment: ASize used once
TestData 00000000

Symbol: TestData
   Definitions
      At line 44 in file Closure.s
   Uses
      None
Comment: TestData unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file Closure.s
   Uses
      None
Comment: main unused
1 symbol
351 symbols in table
