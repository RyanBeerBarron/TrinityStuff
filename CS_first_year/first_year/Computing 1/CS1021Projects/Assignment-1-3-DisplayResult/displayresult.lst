


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             DisplayResult, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 IMPORT           getkey
    4 00000000                 IMPORT           sendchar
    5 00000000                 EXPORT           start
    6 00000000                 PRESERVE8
    7 00000000         
    8 00000000         start
    9 00000000 E3A0600A        LDR              R6, =10     ; constant = 10
   10 00000004 E3A07000        LDR              R7, =0      ; count = 0
   11 00000008 E3A08000        LDR              R8, =0      ; sum = 0
   12 0000000C E59F94D0        LDR              R9, =0x7FFFFFFF 
                                                            ; min = (2^31)-1 
   13 00000010 E3A0A102        LDR              R10, =0x80000000 
                                                            ; max = -(2^31)
   14 00000014         endspacebar
   15 00000014 E3A04000        LDR              R4, =0      ; number = 0
   16 00000018 E3A0B001        LDR              R11, =1     ; positiveNumber = 
                                                            1
   17 0000001C         read
   18 0000001C EBFFFFFE        BL               getkey      ; read key from con
                                                            sole
   19 00000020 E350000D        CMP              R0, #0x0D   ; while (key != CR)
                                                            
   20 00000024 0A00000B        BEQ              endRead     ; {
   21 00000028 EBFFFFFE        BL               sendchar    ;   echo key back t
                                                            o console
   22 0000002C E350002D        CMP              R0, #0x2D   ; if ( key == "-") 
                                                            
   23 00000030 1A000001        BNE              positiveValue ; { 
   24 00000034 E3A0B000        LDR              R11, =0     ;  positiveNumber =
                                                             0
   25 00000038 EAFFFFF7        B                read        ;  get next key
   26 0000003C         positiveValue                        ; }
   27 0000003C E1A05000        MOV              R5, R0      ; singledigit = key
                                                            
   28 00000040 E3550020        CMP              R5, #0x20   ;  if (singledigit 
                                                            != spacebar)
   29 00000044 0A000005        BEQ              spacebar    ;  {
   30 00000048 E0040496        MUL              R4, R6, R4  ;  number = number 
                                                            * constant
   31 0000004C E2455030        SUB              R5, R5, #0x30 ;  singledigit = 
                                                            singledigit - ASCII
                                                             conversion
   32 00000050 E0844005        ADD              R4, R4, R5  ;  number = number 
                                                            + singledigit
   33 00000054         ; } else break
   34 00000054 EAFFFFF0        B                read        ; }
   35 00000058         endRead                              ; if (key == CR )
   36 00000058 E3A05000        MOV              R5, #0      ; quotient = 0
   37 0000005C E3A06000        MOV              R6, #0      ; remainder = 0 
   38 00000060         spacebar                             ;
   39 00000060 E35B0000        CMP              R11, #0     ; if ( positiveNumb
                                                            er == 0 )
   40 00000064 1A000000        BNE              notNegative ; {
   41 00000068 E04B4004        SUB              R4, R11, R4 ;  number = 0 - num
                                                            ber
   42 0000006C         notNegative                          ; }
   43 0000006C E2877001        ADD              R7, R7, #1  ; count += 1 



ARM Macro Assembler    Page 2 


   44 00000070 E0888004        ADD              R8, R8, R4  ; sum += number
   45 00000074 E1540009        CMP              R4, R9      ; if ( number < min
                                                             )
   46 00000078 CA000000        BGT              notLower    ; {
   47 0000007C E1A09004        MOV              R9, R4      ;  min = number
   48 00000080         notLower                             ; }
   49 00000080 E154000A        CMP              R4, R10     ; if ( number > max
                                                             )
   50 00000084 BA000000        BLT              notHigher   ; { 
   51 00000088 E1A0A004        MOV              R10, R4     ;  max = number
   52 0000008C         notHigher                            ; } 
   53 0000008C E350000D        CMP              R0, #0x0D   ; if (key == CR)
   54 00000090 0A000000        BEQ              mean        ; stop reading, com
                                                            pute mean 
   55 00000094 EAFFFFDE        B                endspacebar ; else get next key
                                                            
   56 00000098         mean                                 ;
   57 00000098 E3A0B001        LDR              R11, =1     ; positiveNumber = 
                                                            1
   58 0000009C E04A4009        SUB              R4, R10, R9 ; range = max - min
                                                            
   59 000000A0 E1A06008        MOV              R6, R8      ; remainder = quoti
                                                            ent
   60 000000A4 E3560102        CMP              R6, #0x80000000 ; if ( remainde
                                                            r >= 2^31 )
   61 000000A8 3A000001        BLO              while       ; {
   62 000000AC E3A0B000        LDR              R11, =0     ;  positiveNumber =
                                                             0
   63 000000B0 E04B6006        SUB              R6, R11, R6 ; remainder = 0 - r
                                                            emainder
   64 000000B4         while                                ;} else
   65 000000B4 E1570006        CMP              R7, R6      ;while ( remainder 
                                                            >= count )
   66 000000B8 CA000002        BGT              endwhile    ;{
   67 000000BC E0466007        SUB              R6, R6, R7  ; remainder = remai
                                                            nder - count
   68 000000C0 E2855001        ADD              R5, R5, #1  ; quotient = quotie
                                                            nt + 1
   69 000000C4 EAFFFFFA        B                while       ;}
   70 000000C8         endwhile
   71 000000C8         
   72 000000C8 E3A0000A        MOV              R0, #0x0A   ; key = new line
   73 000000CC EBFFFFFE        BL               sendchar    ; command next line
                                                            
   74 000000D0 E3A0004D        MOV              R0, #0x4D   ; key = "M"
   75 000000D4 EBFFFFFE        BL               sendchar    ; print key
   76 000000D8 E3A00065        MOV              R0, #0x65   ; key = "e"
   77 000000DC EBFFFFFE        BL               sendchar    ; print key
   78 000000E0 E3A00061        MOV              R0, #0x61   ; key = "a"
   79 000000E4 EBFFFFFE        BL               sendchar    ; print key
   80 000000E8 E3A0006E        MOV              R0, #0x6E   ; key = "n"
   81 000000EC EBFFFFFE        BL               sendchar    ; print key
   82 000000F0 E3A0003D        MOV              R0, #0x3D   ; key = "="
   83 000000F4 EBFFFFFE        BL               sendchar    ; print key
   84 000000F8 E3580000        CMP              R8, #0      ; if sum < 0
   85 000000FC CA000001        BGT              positiveSum ; { 
   86 00000100 E3A0002D        MOV              R0, #0x2D   ; key = "-"
   87 00000104 EBFFFFFE        BL               sendchar    ; print key
   88 00000108         positiveSum                          ; }



ARM Macro Assembler    Page 3 


   89 00000108 E3A0B000        LDR              R11, =0     ; leadingNumber = 0
                                                            
   90 0000010C E3A09000        LDR              R9, =0      ; Most significant 
                                                            digit = 0
   91 00000110 E59F83D0        LDR              R8, =1000000000 ; divider = 10^
                                                            9, billion highest 
                                                            power of 10 registe
                                                            r can represent.
   92 00000114 E1550008        CMP              R5, R8      ; if ( quotient > d
                                                            ivider )
   93 00000118 3A000008        BLO              lessThanBillion ; {
   94 0000011C         billionDivision                      ;  while ( quotient
                                                             > divider)
   95 0000011C E1550008        CMP              R5, R8      ; {     
   96 00000120 3A000002        BLO              endBillionDivision ;  
   97 00000124 E0455008        SUB              R5, R5, R8  ;  quotient = quoti
                                                            ent - divider
   98 00000128 E2899001        ADD              R9, R9, #1  ;  Most significant
                                                             digit += 1
   99 0000012C EAFFFFFA        B                billionDivision ; }
  100 00000130         endBillionDivision                   ;
  101 00000130 E2899030        ADD              R9, R9, #0x30 ; Most significan
                                                            t digit += ASCII ch
                                                            aracter code
  102 00000134 E1A00009        MOV              R0, R9      ; key = Most signif
                                                            icant digit
  103 00000138 EBFFFFFE        BL               sendchar    ; print key
  104 0000013C E3A0B001        MOV              R11, #1     ;   leadingNumber =
                                                             1
  105 00000140         lessThanBillion                      ; }
  106 00000140 E59F83A4        LDR              R8, =100000000 ; divider = 10^8
                                                            
  107 00000144 E3A09000        LDR              R9, =0      ; Most significant 
                                                            digit = 0
  108 00000148 E1550008        CMP              R5, R8      ; if ( quotient > d
                                                            ivider)
  109 0000014C 3A000009        BLO              lessThanHundredMillion ; { 
  110 00000150         hundredMillionDivision               ; while ( quotient 
                                                            > divider )  
  111 00000150 E1550008        CMP              R5, R8      ; {
  112 00000154 3A000002        BLO              endHundredMillionDivision ; 
  113 00000158 E0455008        SUB              R5, R5, R8  ;  quotient = quoti
                                                            ent - divider
  114 0000015C E2899001        ADD              R9, R9, #1  ;  Most significant
                                                             digit +=1
  115 00000160 EAFFFFFA        B                hundredMillionDivision ; }
  116 00000164         endHundredMillionDivision            ;
  117 00000164 E2899030        ADD              R9, R9, #0x30 ; Most significan
                                                            t digit += ASCII ch
                                                            aracter code
  118 00000168 E1A00009        MOV              R0, R9      ; key = Most signif
                                                            icant digit
  119 0000016C EBFFFFFE        BL               sendchar    ; print key
  120 00000170 E3A0B001        MOV              R11, #1     ; leadingNumber = 1
                                                            
  121 00000174 EA000004        B                dontprintzero1 ; next division
  122 00000178         lessThanHundredMillion               ; }
  123 00000178 E35B0001        CMP              R11, #1     ; if leadingNumber 
                                                            = 1



ARM Macro Assembler    Page 4 


  124 0000017C 1A000002        BNE              dontprintzero1 ;
  125 00000180 E3A09030        MOV              R9, #0x30   ; Most significant 
                                                            digit += "0" ASCII 
                                                            character code
  126 00000184 E1A00009        MOV              R0, R9      ; key = Most signif
                                                            icant digit
  127 00000188 EBFFFFFE        BL               sendchar    ; print key
  128 0000018C         dontprintzero1                       ;
  129 0000018C E59F835C        LDR              R8, =10000000 ; divider = 10^7
  130 00000190 E3A09000        LDR              R9, =0      ; Most significant 
                                                            digit = 0
  131 00000194 E1550008        CMP              R5, R8      ; if ( quotient > d
                                                            ivider )
  132 00000198 3A000009        BLO              lessThanTenMillion ; { 
  133 0000019C         tenMillionDivision                   ; while ( quotient 
                                                            > divider )
  134 0000019C E1550008        CMP              R5, R8      ;  {
  135 000001A0 3A000002        BLO              endTenMillionDivision ;  
  136 000001A4 E0455008        SUB              R5, R5, R8  ;  quotient = quoti
                                                            ent - divider
  137 000001A8 E2899001        ADD              R9, R9, #1  ;  Most significant
                                                             digit += 1
  138 000001AC EAFFFFFA        B                tenMillionDivision ;  }
  139 000001B0         endTenMillionDivision                ; 
  140 000001B0 E2899030        ADD              R9, R9, #0x30 ;  Most significa
                                                            nt digit += ASCII c
                                                            haracter code
  141 000001B4 E1A00009        MOV              R0, R9      ;  key = Most signi
                                                            ficant digit
  142 000001B8 EBFFFFFE        BL               sendchar    ;  print key
  143 000001BC E3A0B001        MOV              R11, #1     ;  leadingNumber = 
                                                            1
  144 000001C0 EA000004        B                dontprintzero2 ;  next division
                                                            
  145 000001C4         lessThanTenMillion                   ; }
  146 000001C4 E35B0001        CMP              R11, #1     ;if leadingNumber =
                                                             1 
  147 000001C8 1A000002        BNE              dontprintzero2
  148 000001CC E3A09030        MOV              R9, #0x30   ;Most significant d
                                                            igit += "0" ASCII c
                                                            haracter code
  149 000001D0 E1A00009        MOV              R0, R9      ;key = Most signifi
                                                            cant digit
  150 000001D4 EBFFFFFE        BL               sendchar    ;print key
  151 000001D8         dontprintzero2
  152 000001D8 E59F8314        LDR              R8, =1000000 ; divider = 10^6
  153 000001DC E3A09000        LDR              R9, =0      ; Most significant 
                                                            digit = 0
  154 000001E0 E1550008        CMP              R5, R8      ; if ( quotient > d
                                                            ivider )
  155 000001E4 3A000009        BLO              lessThanMillion ; {
  156 000001E8         millionDivision                      ; while ( quotient 
                                                            > divider )
  157 000001E8 E1550008        CMP              R5, R8      ; {
  158 000001EC 3A000002        BLO              endMillionDivision ;   
  159 000001F0 E0455008        SUB              R5, R5, R8  ;  quotient = quoti
                                                            ent - divider
  160 000001F4 E2899001        ADD              R9, R9, #1  ;  Most significant
                                                             digit +=1



ARM Macro Assembler    Page 5 


  161 000001F8 EAFFFFFA        B                millionDivision ;  }
  162 000001FC         endMillionDivision                   ;
  163 000001FC E2899030        ADD              R9, R9, #0x30 ; Most significan
                                                            t digit += ASCII ch
                                                            aracter code
  164 00000200 E1A00009        MOV              R0, R9      ; key = Most signif
                                                            icant digit
  165 00000204 EBFFFFFE        BL               sendchar    ; print key
  166 00000208 E3A0B001        MOV              R11, #1
  167 0000020C EA000004        B                dontprintzero3
  168 00000210         lessThanMillion                      ; }
  169 00000210 E35B0001        CMP              R11, #1
  170 00000214 1A000002        BNE              dontprintzero3
  171 00000218 E3A09030        MOV              R9, #0x30
  172 0000021C E1A00009        MOV              R0, R9
  173 00000220 EBFFFFFE        BL               sendchar
  174 00000224         dontprintzero3
  175 00000224 E59F82CC        LDR              R8, =100000 ; divider = 10^5
  176 00000228 E3A09000        LDR              R9, =0      ; Most significant 
                                                            digit = 0
  177 0000022C E1550008        CMP              R5, R8      ; if ( quotient > d
                                                            ivider )
  178 00000230 3A000009        BLO              lessThanHundredThousand ; {
  179 00000234         hundredThousandDivision              ;
  180 00000234 E1550008        CMP              R5, R8
  181 00000238 3A000002        BLO              endHundredThousandDivision
  182 0000023C E0455008        SUB              R5, R5, R8
  183 00000240 E2899001        ADD              R9, R9, #1
  184 00000244 EAFFFFFA        B                hundredThousandDivision
  185 00000248         endHundredThousandDivision
  186 00000248 E2899030        ADD              R9, R9, #0x30
  187 0000024C E1A00009        MOV              R0, R9
  188 00000250 EBFFFFFE        BL               sendchar
  189 00000254 E3A0B001        MOV              R11, #1
  190 00000258 EA000004        B                dontprintzero4
  191 0000025C         lessThanHundredThousand
  192 0000025C E35B0001        CMP              R11, #1
  193 00000260 1A000002        BNE              dontprintzero4
  194 00000264 E3A09030        MOV              R9, #0x30
  195 00000268 E1A00009        MOV              R0, R9
  196 0000026C EBFFFFFE        BL               sendchar
  197 00000270         dontprintzero4
  198 00000270 E59F8284        LDR              R8, =10000
  199 00000274 E3A09000        LDR              R9, =0
  200 00000278 E1550008        CMP              R5, R8
  201 0000027C 3A000009        BLO              lessThanTenThousand
  202 00000280         tenThousandDivision
  203 00000280 E1550008        CMP              R5, R8
  204 00000284 3A000002        BLO              endTenThousandDivision
  205 00000288 E0455008        SUB              R5, R5, R8
  206 0000028C E2899001        ADD              R9, R9, #1
  207 00000290 EAFFFFFA        B                tenThousandDivision
  208 00000294         endTenThousandDivision
  209 00000294 E2899030        ADD              R9, R9, #0x30
  210 00000298 E1A00009        MOV              R0, R9
  211 0000029C EBFFFFFE        BL               sendchar
  212 000002A0 E3A0B001        MOV              R11, #1
  213 000002A4 EA000004        B                dontprintzero5
  214 000002A8         lessThanTenThousand



ARM Macro Assembler    Page 6 


  215 000002A8 E35B0001        CMP              R11, #1
  216 000002AC 1A000002        BNE              dontprintzero5
  217 000002B0 E3A09030        MOV              R9, #0x30
  218 000002B4 E1A00009        MOV              R0, R9
  219 000002B8 EBFFFFFE        BL               sendchar
  220 000002BC         dontprintzero5
  221 000002BC E3A08FFA        LDR              R8, =1000
  222 000002C0 E3A09000        LDR              R9, =0
  223 000002C4 E1550008        CMP              R5, R8
  224 000002C8 3A000009        BLO              lessThanThousand
  225 000002CC         thousandDivision
  226 000002CC E1550008        CMP              R5, R8
  227 000002D0 3A000002        BLO              endThousandDivision
  228 000002D4 E0455008        SUB              R5, R5, R8
  229 000002D8 E2899001        ADD              R9, R9, #1
  230 000002DC EAFFFFFA        B                thousandDivision
  231 000002E0         endThousandDivision
  232 000002E0 E2899030        ADD              R9, R9, #0x30
  233 000002E4 E1A00009        MOV              R0, R9
  234 000002E8 EBFFFFFE        BL               sendchar
  235 000002EC E3A0B001        MOV              R11, #1
  236 000002F0 EA000004        B                dontprintzero6
  237 000002F4         lessThanThousand
  238 000002F4 E35B0001        CMP              R11, #1
  239 000002F8 1A000002        BNE              dontprintzero6
  240 000002FC E3A09030        MOV              R9, #0x30
  241 00000300 E1A00009        MOV              R0, R9
  242 00000304 EBFFFFFE        BL               sendchar
  243 00000308         dontprintzero6
  244 00000308 E3A08064        LDR              R8, =100
  245 0000030C E3A09000        LDR              R9, =0
  246 00000310 E1550008        CMP              R5, R8
  247 00000314 3A000009        BLO              lessThanHundred
  248 00000318         hundredDivision
  249 00000318 E1550008        CMP              R5, R8
  250 0000031C 3A000002        BLO              endHundredDivision
  251 00000320 E0455008        SUB              R5, R5, R8
  252 00000324 E2899001        ADD              R9, R9, #1
  253 00000328 EAFFFFFA        B                hundredDivision
  254 0000032C         endHundredDivision
  255 0000032C E2899030        ADD              R9, R9, #0x30
  256 00000330 E1A00009        MOV              R0, R9
  257 00000334 EBFFFFFE        BL               sendchar
  258 00000338 E3A0B001        MOV              R11, #1
  259 0000033C EA000004        B                dontprintzero7
  260 00000340         lessThanHundred
  261 00000340 E35B0001        CMP              R11, #1
  262 00000344 1A000002        BNE              dontprintzero7
  263 00000348 E3A09030        MOV              R9, #0x30
  264 0000034C E1A00009        MOV              R0, R9
  265 00000350 EBFFFFFE        BL               sendchar
  266 00000354         dontprintzero7
  267 00000354 E3A0800A        LDR              R8, =10
  268 00000358 E3A09000        LDR              R9, =0
  269 0000035C E1550008        CMP              R5, R8
  270 00000360 3A000009        BLO              lessThanTen
  271 00000364         tenDivision
  272 00000364 E1550008        CMP              R5, R8
  273 00000368 3A000002        BLO              endTenDivision



ARM Macro Assembler    Page 7 


  274 0000036C E0455008        SUB              R5, R5, R8
  275 00000370 E2899001        ADD              R9, R9, #1
  276 00000374 EAFFFFFA        B                tenDivision
  277 00000378         endTenDivision
  278 00000378 E2899030        ADD              R9, R9, #0x30
  279 0000037C E1A00009        MOV              R0, R9
  280 00000380 EBFFFFFE        BL               sendchar
  281 00000384 E35B0001        CMP              R11, #1
  282 00000388 EA000004        B                dontprintzero8
  283 0000038C         lessThanTen
  284 0000038C E35B0001        CMP              R11, #1
  285 00000390 1A000002        BNE              dontprintzero8
  286 00000394 E3A09030        MOV              R9, #0x30
  287 00000398 E1A00009        MOV              R0, R9
  288 0000039C EBFFFFFE        BL               sendchar
  289 000003A0         dontprintzero8
  290 000003A0 E1A09005        MOV              R9, R5
  291 000003A4 E2899030        ADD              R9, R9, #0x30
  292 000003A8 E1A00009        MOV              R0, R9
  293 000003AC EBFFFFFE        BL               sendchar
  294 000003B0 E3560000        CMP              R6, #0
  295 000003B4 0A00002A        BEQ              noDecimal
  296 000003B8 E3A09000        LDR              R9, =0
  297 000003BC E3A0002E        MOV              R0, #0x2E
  298 000003C0 EBFFFFFE        BL               sendchar
  299 000003C4 E3A0B064        LDR              R11, =100
  300 000003C8 E006069B        MUL              R6, R11, R6
  301 000003CC         decimalDivision
  302 000003CC E1560007        CMP              R6, R7
  303 000003D0 3A000002        BLO              endDecimalDivision
  304 000003D4 E0466007        SUB              R6, R6, R7
  305 000003D8 E2899001        ADD              R9, R9, #1
  306 000003DC EAFFFFFA        B                decimalDivision
  307 000003E0         endDecimalDivision
  308 000003E0 E1A06009        MOV              R6, R9
  309 000003E4 E3A08064        LDR              R8, =100
  310 000003E8 E3A09000        LDR              R9, =0
  311 000003EC E1560008        CMP              R6, R8
  312 000003F0 3A000009        BLO              lessThanThreeDecimal
  313 000003F4         threeDecimalDivision
  314 000003F4 E1560008        CMP              R6, R8
  315 000003F8 3A000002        BLO              endThreeDecimalDivision
  316 000003FC E0466008        SUB              R6, R6, R8
  317 00000400 E2899001        ADD              R9, R9, #1
  318 00000404 EAFFFFFA        B                threeDecimalDivision
  319 00000408         endThreeDecimalDivision
  320 00000408 E2899030        ADD              R9, R9, #0x30
  321 0000040C E1A00009        MOV              R0, R9
  322 00000410 EBFFFFFE        BL               sendchar
  323 00000414 E3560000        CMP              R6, #0
  324 00000418 0A000011        BEQ              noDecimal
  325 0000041C         lessThanThreeDecimal
  326 0000041C E3A0800A        LDR              R8, =10
  327 00000420 E3A09000        LDR              R9, =0
  328 00000424 E1560008        CMP              R6, R8
  329 00000428 3A000007        BLO              lessThanTwoDecimal
  330 0000042C         twoDecimalDivision
  331 0000042C E1560008        CMP              R6, R8
  332 00000430 3A000002        BLO              endTwoDecimalDivision



ARM Macro Assembler    Page 8 


  333 00000434 E0466008        SUB              R6, R6, R8
  334 00000438 E2899001        ADD              R9, R9, #1
  335 0000043C EAFFFFFA        B                twoDecimalDivision
  336 00000440         endTwoDecimalDivision
  337 00000440 E2899030        ADD              R9, R9, #0x30
  338 00000444 E1A00009        MOV              R0, R9
  339 00000448 EBFFFFFE        BL               sendchar
  340 0000044C         lessThanTwoDecimal
  341 0000044C E3560000        CMP              R6, #0
  342 00000450 0A000003        BEQ              noDecimal
  343 00000454 E1A09006        MOV              R9, R6
  344 00000458 E2899030        ADD              R9, R9, #0x30
  345 0000045C E1A00009        MOV              R0, R9
  346 00000460 EBFFFFFE        BL               sendchar
  347 00000464         noDecimal
  348 00000464 E3A0000A        MOV              R0, #0x0A
  349 00000468 EBFFFFFE        BL               sendchar
  350 0000046C E3A00043        MOV              R0, #0x43
  351 00000470 EBFFFFFE        BL               sendchar
  352 00000474 E3A0006F        MOV              R0, #0x6F
  353 00000478 EBFFFFFE        BL               sendchar
  354 0000047C E3A00075        MOV              R0, #0x75
  355 00000480 EBFFFFFE        BL               sendchar
  356 00000484 E3A0006E        MOV              R0, #0x6E
  357 00000488 EBFFFFFE        BL               sendchar
  358 0000048C E3A00074        MOV              R0, #0x74
  359 00000490 EBFFFFFE        BL               sendchar
  360 00000494 E3A0003D        MOV              R0, #0x3D
  361 00000498 EBFFFFFE        BL               sendchar
  362 0000049C E3A09000        LDR              R9, =0
  363 000004A0 E1570008        CMP              R7, R8
  364 000004A4 3A000007        BLO              lessThanTenNumber
  365 000004A8         tenNumberDivision
  366 000004A8 E1570008        CMP              R7, R8
  367 000004AC 3A000002        BLO              endTenNumberDivision
  368 000004B0 E0477008        SUB              R7, R7, R8
  369 000004B4 E2899001        ADD              R9, R9, #1
  370 000004B8 EAFFFFFA        B                tenNumberDivision
  371 000004BC         endTenNumberDivision
  372 000004BC E2899030        ADD              R9, R9, #0x30
  373 000004C0 E1A00009        MOV              R0, R9
  374 000004C4 EBFFFFFE        BL               sendchar
  375 000004C8         lessThanTenNumber
  376 000004C8 E3570000        CMP              R7, #0
  377 000004CC 0A000003        BEQ              endOfProgram
  378 000004D0 E1A09007        MOV              R9, R7
  379 000004D4 E2899030        ADD              R9, R9, #0x30
  380 000004D8 E1A00009        MOV              R0, R9
  381 000004DC EBFFFFFE        BL               sendchar
  382 000004E0         endOfProgram
  383 000004E0 EAFFFFFE 
                       stop    B                stop
  384 000004E4         
  385 000004E4                 END
              7FFFFFFF 
              3B9ACA00 
              05F5E100 
              00989680 
              000F4240 



ARM Macro Assembler    Page 9 


              000186A0 
              00002710 
Command Line: --debug --xref --apcs=interwork --depend=.\displayresult.d -o.\di
splayresult.o -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\
Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --prede
fine="NO_CLOCK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM
_INTVEC SETA 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list
=.\displayresult.lst DisplayResult.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DisplayResult 00000000

Symbol: DisplayResult
   Definitions
      At line 1 in file DisplayResult.s
   Uses
      None
Comment: DisplayResult unused
billionDivision 0000011C

Symbol: billionDivision
   Definitions
      At line 94 in file DisplayResult.s
   Uses
      At line 99 in file DisplayResult.s
Comment: billionDivision used once
decimalDivision 000003CC

Symbol: decimalDivision
   Definitions
      At line 301 in file DisplayResult.s
   Uses
      At line 306 in file DisplayResult.s
Comment: decimalDivision used once
dontprintzero1 0000018C

Symbol: dontprintzero1
   Definitions
      At line 128 in file DisplayResult.s
   Uses
      At line 121 in file DisplayResult.s
      At line 124 in file DisplayResult.s

dontprintzero2 000001D8

Symbol: dontprintzero2
   Definitions
      At line 151 in file DisplayResult.s
   Uses
      At line 144 in file DisplayResult.s
      At line 147 in file DisplayResult.s

dontprintzero3 00000224

Symbol: dontprintzero3
   Definitions
      At line 174 in file DisplayResult.s
   Uses
      At line 167 in file DisplayResult.s
      At line 170 in file DisplayResult.s

dontprintzero4 00000270

Symbol: dontprintzero4
   Definitions
      At line 197 in file DisplayResult.s
   Uses
      At line 190 in file DisplayResult.s
      At line 193 in file DisplayResult.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


dontprintzero5 000002BC

Symbol: dontprintzero5
   Definitions
      At line 220 in file DisplayResult.s
   Uses
      At line 213 in file DisplayResult.s
      At line 216 in file DisplayResult.s

dontprintzero6 00000308

Symbol: dontprintzero6
   Definitions
      At line 243 in file DisplayResult.s
   Uses
      At line 236 in file DisplayResult.s
      At line 239 in file DisplayResult.s

dontprintzero7 00000354

Symbol: dontprintzero7
   Definitions
      At line 266 in file DisplayResult.s
   Uses
      At line 259 in file DisplayResult.s
      At line 262 in file DisplayResult.s

dontprintzero8 000003A0

Symbol: dontprintzero8
   Definitions
      At line 289 in file DisplayResult.s
   Uses
      At line 282 in file DisplayResult.s
      At line 285 in file DisplayResult.s

endBillionDivision 00000130

Symbol: endBillionDivision
   Definitions
      At line 100 in file DisplayResult.s
   Uses
      At line 96 in file DisplayResult.s
Comment: endBillionDivision used once
endDecimalDivision 000003E0

Symbol: endDecimalDivision
   Definitions
      At line 307 in file DisplayResult.s
   Uses
      At line 303 in file DisplayResult.s
Comment: endDecimalDivision used once
endHundredDivision 0000032C

Symbol: endHundredDivision
   Definitions
      At line 254 in file DisplayResult.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 250 in file DisplayResult.s
Comment: endHundredDivision used once
endHundredMillionDivision 00000164

Symbol: endHundredMillionDivision
   Definitions
      At line 116 in file DisplayResult.s
   Uses
      At line 112 in file DisplayResult.s
Comment: endHundredMillionDivision used once
endHundredThousandDivision 00000248

Symbol: endHundredThousandDivision
   Definitions
      At line 185 in file DisplayResult.s
   Uses
      At line 181 in file DisplayResult.s
Comment: endHundredThousandDivision used once
endMillionDivision 000001FC

Symbol: endMillionDivision
   Definitions
      At line 162 in file DisplayResult.s
   Uses
      At line 158 in file DisplayResult.s
Comment: endMillionDivision used once
endOfProgram 000004E0

Symbol: endOfProgram
   Definitions
      At line 382 in file DisplayResult.s
   Uses
      At line 377 in file DisplayResult.s
Comment: endOfProgram used once
endRead 00000058

Symbol: endRead
   Definitions
      At line 35 in file DisplayResult.s
   Uses
      At line 20 in file DisplayResult.s
Comment: endRead used once
endTenDivision 00000378

Symbol: endTenDivision
   Definitions
      At line 277 in file DisplayResult.s
   Uses
      At line 273 in file DisplayResult.s
Comment: endTenDivision used once
endTenMillionDivision 000001B0

Symbol: endTenMillionDivision
   Definitions
      At line 139 in file DisplayResult.s
   Uses
      At line 135 in file DisplayResult.s
Comment: endTenMillionDivision used once
endTenNumberDivision 000004BC



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: endTenNumberDivision
   Definitions
      At line 371 in file DisplayResult.s
   Uses
      At line 367 in file DisplayResult.s
Comment: endTenNumberDivision used once
endTenThousandDivision 00000294

Symbol: endTenThousandDivision
   Definitions
      At line 208 in file DisplayResult.s
   Uses
      At line 204 in file DisplayResult.s
Comment: endTenThousandDivision used once
endThousandDivision 000002E0

Symbol: endThousandDivision
   Definitions
      At line 231 in file DisplayResult.s
   Uses
      At line 227 in file DisplayResult.s
Comment: endThousandDivision used once
endThreeDecimalDivision 00000408

Symbol: endThreeDecimalDivision
   Definitions
      At line 319 in file DisplayResult.s
   Uses
      At line 315 in file DisplayResult.s
Comment: endThreeDecimalDivision used once
endTwoDecimalDivision 00000440

Symbol: endTwoDecimalDivision
   Definitions
      At line 336 in file DisplayResult.s
   Uses
      At line 332 in file DisplayResult.s
Comment: endTwoDecimalDivision used once
endspacebar 00000014

Symbol: endspacebar
   Definitions
      At line 14 in file DisplayResult.s
   Uses
      At line 55 in file DisplayResult.s
Comment: endspacebar used once
endwhile 000000C8

Symbol: endwhile
   Definitions
      At line 70 in file DisplayResult.s
   Uses
      At line 66 in file DisplayResult.s
Comment: endwhile used once
hundredDivision 00000318

Symbol: hundredDivision
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 248 in file DisplayResult.s
   Uses
      At line 253 in file DisplayResult.s
Comment: hundredDivision used once
hundredMillionDivision 00000150

Symbol: hundredMillionDivision
   Definitions
      At line 110 in file DisplayResult.s
   Uses
      At line 115 in file DisplayResult.s
Comment: hundredMillionDivision used once
hundredThousandDivision 00000234

Symbol: hundredThousandDivision
   Definitions
      At line 179 in file DisplayResult.s
   Uses
      At line 184 in file DisplayResult.s
Comment: hundredThousandDivision used once
lessThanBillion 00000140

Symbol: lessThanBillion
   Definitions
      At line 105 in file DisplayResult.s
   Uses
      At line 93 in file DisplayResult.s
Comment: lessThanBillion used once
lessThanHundred 00000340

Symbol: lessThanHundred
   Definitions
      At line 260 in file DisplayResult.s
   Uses
      At line 247 in file DisplayResult.s
Comment: lessThanHundred used once
lessThanHundredMillion 00000178

Symbol: lessThanHundredMillion
   Definitions
      At line 122 in file DisplayResult.s
   Uses
      At line 109 in file DisplayResult.s
Comment: lessThanHundredMillion used once
lessThanHundredThousand 0000025C

Symbol: lessThanHundredThousand
   Definitions
      At line 191 in file DisplayResult.s
   Uses
      At line 178 in file DisplayResult.s
Comment: lessThanHundredThousand used once
lessThanMillion 00000210

Symbol: lessThanMillion
   Definitions
      At line 168 in file DisplayResult.s
   Uses
      At line 155 in file DisplayResult.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

Comment: lessThanMillion used once
lessThanTen 0000038C

Symbol: lessThanTen
   Definitions
      At line 283 in file DisplayResult.s
   Uses
      At line 270 in file DisplayResult.s
Comment: lessThanTen used once
lessThanTenMillion 000001C4

Symbol: lessThanTenMillion
   Definitions
      At line 145 in file DisplayResult.s
   Uses
      At line 132 in file DisplayResult.s
Comment: lessThanTenMillion used once
lessThanTenNumber 000004C8

Symbol: lessThanTenNumber
   Definitions
      At line 375 in file DisplayResult.s
   Uses
      At line 364 in file DisplayResult.s
Comment: lessThanTenNumber used once
lessThanTenThousand 000002A8

Symbol: lessThanTenThousand
   Definitions
      At line 214 in file DisplayResult.s
   Uses
      At line 201 in file DisplayResult.s
Comment: lessThanTenThousand used once
lessThanThousand 000002F4

Symbol: lessThanThousand
   Definitions
      At line 237 in file DisplayResult.s
   Uses
      At line 224 in file DisplayResult.s
Comment: lessThanThousand used once
lessThanThreeDecimal 0000041C

Symbol: lessThanThreeDecimal
   Definitions
      At line 325 in file DisplayResult.s
   Uses
      At line 312 in file DisplayResult.s
Comment: lessThanThreeDecimal used once
lessThanTwoDecimal 0000044C

Symbol: lessThanTwoDecimal
   Definitions
      At line 340 in file DisplayResult.s
   Uses
      At line 329 in file DisplayResult.s
Comment: lessThanTwoDecimal used once
mean 00000098




ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

Symbol: mean
   Definitions
      At line 56 in file DisplayResult.s
   Uses
      At line 54 in file DisplayResult.s
Comment: mean used once
millionDivision 000001E8

Symbol: millionDivision
   Definitions
      At line 156 in file DisplayResult.s
   Uses
      At line 161 in file DisplayResult.s
Comment: millionDivision used once
noDecimal 00000464

Symbol: noDecimal
   Definitions
      At line 347 in file DisplayResult.s
   Uses
      At line 295 in file DisplayResult.s
      At line 324 in file DisplayResult.s
      At line 342 in file DisplayResult.s

notHigher 0000008C

Symbol: notHigher
   Definitions
      At line 52 in file DisplayResult.s
   Uses
      At line 50 in file DisplayResult.s
Comment: notHigher used once
notLower 00000080

Symbol: notLower
   Definitions
      At line 48 in file DisplayResult.s
   Uses
      At line 46 in file DisplayResult.s
Comment: notLower used once
notNegative 0000006C

Symbol: notNegative
   Definitions
      At line 42 in file DisplayResult.s
   Uses
      At line 40 in file DisplayResult.s
Comment: notNegative used once
positiveSum 00000108

Symbol: positiveSum
   Definitions
      At line 88 in file DisplayResult.s
   Uses
      At line 85 in file DisplayResult.s
Comment: positiveSum used once
positiveValue 0000003C

Symbol: positiveValue



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 26 in file DisplayResult.s
   Uses
      At line 23 in file DisplayResult.s
Comment: positiveValue used once
read 0000001C

Symbol: read
   Definitions
      At line 17 in file DisplayResult.s
   Uses
      At line 25 in file DisplayResult.s
      At line 34 in file DisplayResult.s

spacebar 00000060

Symbol: spacebar
   Definitions
      At line 38 in file DisplayResult.s
   Uses
      At line 29 in file DisplayResult.s
Comment: spacebar used once
start 00000000

Symbol: start
   Definitions
      At line 8 in file DisplayResult.s
   Uses
      At line 5 in file DisplayResult.s
Comment: start used once
stop 000004E0

Symbol: stop
   Definitions
      At line 383 in file DisplayResult.s
   Uses
      At line 383 in file DisplayResult.s
Comment: stop used once
tenDivision 00000364

Symbol: tenDivision
   Definitions
      At line 271 in file DisplayResult.s
   Uses
      At line 276 in file DisplayResult.s
Comment: tenDivision used once
tenMillionDivision 0000019C

Symbol: tenMillionDivision
   Definitions
      At line 133 in file DisplayResult.s
   Uses
      At line 138 in file DisplayResult.s
Comment: tenMillionDivision used once
tenNumberDivision 000004A8

Symbol: tenNumberDivision
   Definitions
      At line 365 in file DisplayResult.s



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 370 in file DisplayResult.s
Comment: tenNumberDivision used once
tenThousandDivision 00000280

Symbol: tenThousandDivision
   Definitions
      At line 202 in file DisplayResult.s
   Uses
      At line 207 in file DisplayResult.s
Comment: tenThousandDivision used once
thousandDivision 000002CC

Symbol: thousandDivision
   Definitions
      At line 225 in file DisplayResult.s
   Uses
      At line 230 in file DisplayResult.s
Comment: thousandDivision used once
threeDecimalDivision 000003F4

Symbol: threeDecimalDivision
   Definitions
      At line 313 in file DisplayResult.s
   Uses
      At line 318 in file DisplayResult.s
Comment: threeDecimalDivision used once
twoDecimalDivision 0000042C

Symbol: twoDecimalDivision
   Definitions
      At line 330 in file DisplayResult.s
   Uses
      At line 335 in file DisplayResult.s
Comment: twoDecimalDivision used once
while 000000B4

Symbol: while
   Definitions
      At line 64 in file DisplayResult.s
   Uses
      At line 61 in file DisplayResult.s
      At line 69 in file DisplayResult.s

63 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

getkey 00000000

Symbol: getkey
   Definitions
      At line 3 in file DisplayResult.s
   Uses
      At line 18 in file DisplayResult.s
Comment: getkey used once
main 00000000

Symbol: main
   Definitions
      At line 2 in file DisplayResult.s
   Uses
      None
Comment: main unused
sendchar 00000000

Symbol: sendchar
   Definitions
      At line 4 in file DisplayResult.s
   Uses
      At line 21 in file DisplayResult.s
      At line 73 in file DisplayResult.s
      At line 75 in file DisplayResult.s
      At line 77 in file DisplayResult.s
      At line 79 in file DisplayResult.s
      At line 81 in file DisplayResult.s
      At line 83 in file DisplayResult.s
      At line 87 in file DisplayResult.s
      At line 103 in file DisplayResult.s
      At line 119 in file DisplayResult.s
      At line 127 in file DisplayResult.s
      At line 142 in file DisplayResult.s
      At line 150 in file DisplayResult.s
      At line 165 in file DisplayResult.s
      At line 173 in file DisplayResult.s
      At line 188 in file DisplayResult.s
      At line 196 in file DisplayResult.s
      At line 211 in file DisplayResult.s
      At line 219 in file DisplayResult.s
      At line 234 in file DisplayResult.s
      At line 242 in file DisplayResult.s
      At line 257 in file DisplayResult.s
      At line 265 in file DisplayResult.s
      At line 280 in file DisplayResult.s
      At line 288 in file DisplayResult.s
      At line 293 in file DisplayResult.s
      At line 298 in file DisplayResult.s
      At line 322 in file DisplayResult.s
      At line 339 in file DisplayResult.s
      At line 346 in file DisplayResult.s
      At line 349 in file DisplayResult.s
      At line 351 in file DisplayResult.s
      At line 353 in file DisplayResult.s
      At line 355 in file DisplayResult.s
      At line 357 in file DisplayResult.s
      At line 359 in file DisplayResult.s
      At line 361 in file DisplayResult.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 374 in file DisplayResult.s
      At line 381 in file DisplayResult.s

3 symbols
405 symbols in table
