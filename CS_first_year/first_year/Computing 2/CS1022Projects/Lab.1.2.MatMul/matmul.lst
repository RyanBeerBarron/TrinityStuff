


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             MatMul, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000 E59F0080        LDR              R0, =matR
    7 00000004 E59F1080        LDR              R1, =matA
    8 00000008 E59F2080        LDR              R2, =matB
    9 0000000C E3A03004        LDR              R3, =N
   10 00000010 E3A04000        LDR              R4, =0      ; row =  0
   11 00000014 E3A05000        LDR              R5, =0      ; count = 0
   12 00000018 E3A06000        LDR              R6, =0      ; sum = 0
   13 0000001C E3A0B000        LDR              R11, =0     ; column = 0
   14 00000020         while2                               ; while ( row < 4 &
                                                            & column < 4 )
   15 00000020 E1550003        CMP              R5, R3      ; {  while ( count 
                                                            < 4 ) 
   16 00000024 0A00000B        BEQ              endwhile    ;  {
   17 00000028 E0070394        MUL              R7, R4, R3  ;    offset = row *
                                                             row size
   18 0000002C E0877005        ADD              R7, R7, R5  ;    offset = offse
                                                            t + count
   19 00000030 E0070793        MUL              R7, R3, R7  ;   offset = offset
                                                             * word size
   20 00000034 E7918007        LDR              R8, [R1, R7] ;   numberA  = add
                                                            ress + offset
   21 00000038 E0070593        MUL              R7, R3, R5  ;   offset = count 
                                                            * row size
   22 0000003C E087700B        ADD              R7, R7, R11 ;    offset = offse
                                                            t + column
   23 00000040 E0070793        MUL              R7, R3, R7  ;   offset = offset
                                                             * word size
   24 00000044 E7929007        LDR              R9, [R2, R7] ;   numberB = addr
                                                            ess + offset
   25 00000048 E00A0998        MUL              R10, R8, R9 ;    productAB = nu
                                                            mberA * numberB 
   26 0000004C E086600A        ADD              R6, R6, R10 ;    sum = sum + pr
                                                            oductAB
   27 00000050 E2855001        ADD              R5, R5, #1  ;    count = count 
                                                            + 1
   28 00000054 EAFFFFF1        B                while2      ;  }
   29 00000058         endwhile                             ;  
   30 00000058 E3A05000        LDR              R5, =0      ;   count = 0
   31 0000005C E4806004        STR              R6, [R0], #4 ;   index matriceR
                                                             = store sum / next
                                                             index
   32 00000060 E28BB001        ADD              R11, R11, #1 ;  column = column
                                                             + 1
   33 00000064 E3A06000        LDR              R6, =0      ;  sum = 0
   34 00000068 E15B0003        CMP              R11, R3     ;  if column = 4
   35 0000006C 1A000003        BNE              ifend       ;  {  
   36 00000070 E2844001        ADD              R4, R4, #1  ;   row = row + 1
   37 00000074 E1540003        CMP              R4, R3      ;   if row = 4
   38 00000078 0A000001        BEQ              stop        ;    end program
   39 0000007C E3A0B000        LDR              R11, =0     ;   else column = 0
                                                            
   40 00000080         ifend                                ;  }
   41 00000080 EAFFFFE6        B                while2      ; }
   42 00000084 EAFFFFFE 



ARM Macro Assembler    Page 2 


                       stop    B                stop
   43 00000088         
   44 00000088         
   45 00000088 00000000 
              00000000 
              00000000 
              00000000         AREA             TestArray, DATA, READWRITE
   46 00000000         
   47 00000000 00000004 
                       N       EQU              4
   48 00000000         
   49 00000000 00000005 
              00000004 
              00000003 
              00000002 matA    DCD              5,4,3,2
   50 00000010 00000003 
              00000004 
              00000003 
              00000004         DCD              3,4,3,4
   51 00000020 00000002 
              00000003 
              00000004 
              00000005         DCD              2,3,4,5
   52 00000030 00000004 
              00000003 
              00000004 
              00000003         DCD              4,3,4,3
   53 00000040         
   54 00000040 00000005 
              00000004 
              00000003 
              00000002 matB    DCD              5,4,3,2
   55 00000050 00000003 
              00000004 
              00000003 
              00000004         DCD              3,4,3,4
   56 00000060 00000002 
              00000003 
              00000004 
              00000005         DCD              2,3,4,5
   57 00000070 00000004 
              00000003 
              00000004 
              00000003         DCD              4,3,4,3
   58 00000080         
   59 00000080 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       matR    SPACE            64
   60 000000C0         
   61 000000C0                 END
Command Line: --debug --xref --apcs=interwork --depend=.\matmul.d -o.\matmul.o 
-ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\Philips --
predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="NO_CLOCK
_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA 1
" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\matmul.lst 
MatMul.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MatMul 00000000

Symbol: MatMul
   Definitions
      At line 1 in file MatMul.s
   Uses
      None
Comment: MatMul unused
endwhile 00000058

Symbol: endwhile
   Definitions
      At line 29 in file MatMul.s
   Uses
      At line 16 in file MatMul.s
Comment: endwhile used once
ifend 00000080

Symbol: ifend
   Definitions
      At line 40 in file MatMul.s
   Uses
      At line 35 in file MatMul.s
Comment: ifend used once
start 00000000

Symbol: start
   Definitions
      At line 5 in file MatMul.s
   Uses
      At line 3 in file MatMul.s
Comment: start used once
stop 00000084

Symbol: stop
   Definitions
      At line 42 in file MatMul.s
   Uses
      At line 38 in file MatMul.s
      At line 42 in file MatMul.s

while2 00000020

Symbol: while2
   Definitions
      At line 14 in file MatMul.s
   Uses
      At line 28 in file MatMul.s
      At line 41 in file MatMul.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

TestArray 00000000

Symbol: TestArray
   Definitions
      At line 45 in file MatMul.s
   Uses
      None
Comment: TestArray unused
matA 00000000

Symbol: matA
   Definitions
      At line 49 in file MatMul.s
   Uses
      At line 7 in file MatMul.s
Comment: matA used once
matB 00000040

Symbol: matB
   Definitions
      At line 54 in file MatMul.s
   Uses
      At line 8 in file MatMul.s
Comment: matB used once
matR 00000080

Symbol: matR
   Definitions
      At line 59 in file MatMul.s
   Uses
      At line 6 in file MatMul.s
Comment: matR used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

N 00000004

Symbol: N
   Definitions
      At line 47 in file MatMul.s
   Uses
      At line 9 in file MatMul.s
Comment: N used once
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file MatMul.s
   Uses
      None
Comment: main unused
1 symbol
351 symbols in table
