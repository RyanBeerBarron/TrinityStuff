


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000         
    5 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    6 00000000 E0008000 
                       T1      equ              0xE0008000
    7 00000000         
    8 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
    9 00000000 00000004 
                       TCR     equ              4
   10 00000000 00000014 
                       MCR     equ              0x14
   11 00000000 00000018 
                       MR0     equ              0x18
   12 00000000         
   13 00000000 00000002 
                       TimerCommandReset
                               equ              2
   14 00000000 00000001 
                       TimerCommandRun
                               equ              1
   15 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   16 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   17 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   18 00000000         
   19 00000000         ; VIC Stuff -- UM, Table 41
   20 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   21 00000000 00000010 
                       IntEnable
                               equ              0x10
   22 00000000 00000030 
                       VectAddr
                               equ              0x30
   23 00000000 00000100 
                       VectAddr0
                               equ              0x100
   24 00000000 00000200 
                       VectCtrl0
                               equ              0x200
   25 00000000         
   26 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   27 00000000 00000010 



ARM Macro Assembler    Page 2 


                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   28 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   29 00000000         
   30 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   31 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   32 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   33 00000000 E0028010 
                       IO1PIN  EQU              0xE0028010
   34 00000000         
   35 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   36 00000000                 IMPORT           main
   37 00000000         
   38 00000000         ; (c) Mike Brady, 2014â€“2016.
   39 00000000         
   40 00000000                 EXPORT           start
   41 00000000         start
   42 00000000         ; initialisation code
   43 00000000 E59F10DC        ldr              r1,=IO1DIR
   44 00000004 E3A0280F        ldr              r2,=0x000f0000 ;select P1.19--P
                                                            1.16
   45 00000008 E5812000        str              r2,[r1]     ;make them outputs
   46 0000000C E59F10D4        ldr              r1,=IO1SET
   47 00000010 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
   48 00000014 E3A02702        ldr              r2, =0x80000
   49 00000018 E59F10CC        ldr              r1, =IO1CLR
   50 0000001C E5812000        str              r2, [r1]
   51 00000020 E59F10C8        ldr              r1, =currentLED
   52 00000024 E5812000        str              r2, [r1]
   53 00000028         
   54 00000028         ; Initialise the VIC
   55 00000028 E59F00C4        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   56 0000002C         
   57 0000002C E59F10C4        ldr              r1,=irqhan
   58 00000030 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   59 00000034         
   60 00000034 E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   61 00000038 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   62 0000003C         
   63 0000003C E3A01010        mov              r1,#Timer0Mask
   64 00000040 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th



ARM Macro Assembler    Page 3 


                                                            e VIC
   65 00000044         
   66 00000044 E3A01000        mov              r1,#0
   67 00000048 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (
                                                            may not be needed)
   68 0000004C         
   69 0000004C         ; Initialise Timer 0
   70 0000004C E59F00A8        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   71 00000050         
   72 00000050 E3A01002        mov              r1,#TimerCommandReset
   73 00000054 E5801004        str              r1,[r0,#TCR]
   74 00000058         
   75 00000058 E3A010FF        mov              r1,#TimerResetAllInterrupts
   76 0000005C E5801000        str              r1,[r0,#IR]
   77 00000060         
   78 00000060 E59F1098        ldr              r1,=73727   ;(14745600/200)-1, 
                                                            5 ms = 1/200 second
                                                            
   79 00000064 E5801018        str              r1,[r0,#MR0]
   80 00000068         
   81 00000068 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   82 0000006C E5801014        str              r1,[r0,#MCR]
   83 00000070         
   84 00000070 E3A01001        mov              r1,#TimerCommandRun
   85 00000074 E5801004        str              r1,[r0,#TCR]
   86 00000078         
   87 00000078         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
   88 00000078         
   89 00000078         
   90 00000078 E59FA084        ldr              r10, =IfInterrupt
   91 0000007C         wloop
   92 0000007C E59A2000        ldr              r2, [r10]
   93 00000080 E3520001        cmp              r2, #1
   94 00000084 1AFFFFFC        bne              wloop
   95 00000088         
   96 00000088         
   97 00000088 E3A02000        mov              r2, #0
   98 0000008C E58A2000        str              r2, [r10]
   99 00000090         
  100 00000090 E59F0070        LDR              R0, =msCount
  101 00000094 E5904000        LDR              R4, [R0]
  102 00000098 E35400C8        CMP              R4, #200
  103 0000009C BA00000D        BLT              updateCount
  104 000000A0 E59F1040        ldr              r1,=IO1SET
  105 000000A4 E59F2040        ldr              r2,=IO1CLR
  106 000000A8         
  107 000000A8 E59F5040        ldr              r5,=currentLED
  108 000000AC E5953000        ldr              r3, [r5]
  109 000000B0 E5813000        str              r3, [r1]
  110 000000B4 E1A030A3        mov              r3, r3, lsr #1
  111 000000B8 E3530902        CMP              R3, #0x00008000
  112 000000BC 1A000000        BNE              not
  113 000000C0 E3A03702        LDR              R3,=0x00080000
  114 000000C4         not
  115 000000C4 E5823000        str              r3, [r2]
  116 000000C8 E5853000        str              r3, [r5]



ARM Macro Assembler    Page 4 


  117 000000CC E3A04000        LDR              R4, =0
  118 000000D0 E5804000        STR              R4, [R0]
  119 000000D4 EAFFFFE8        B                wloop
  120 000000D8         updateCount
  121 000000D8 E2844001        ADD              R4, R4, #1
  122 000000DC E5804000        STR              R4, [R0]
  123 000000E0         
  124 000000E0 EAFFFFE5        b                wloop       ; branch always
  125 000000E4         ;main program execution will never drop below the statem
                       ent above.
  126 000000E4         
  127 000000E4 E0028018 
              E0028014 
              E002801C 
              00000000 
              FFFFF000 
              00000000 
              E0004000 
              00011FFF 
              00000000 
              00000000 
              00000000         AREA             InterruptStuff, CODE, READONLY
  128 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
  129 00000004 E92D47FF        stmfd            sp!,{r0-r10,lr} ; the lr will b
                                                            e restored to the p
                                                            c
  130 00000008         
  131 00000008         ;this is the body of the interrupt handler
  132 00000008         
  133 00000008         ;here you'd put the unique part of your interrupt handle
                       r
  134 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
  135 00000008         
  136 00000008         
  137 00000008         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  138 00000008         ;i.e. we 'acknowledge' the interrupt
  139 00000008 E59F0020        ldr              r0,=T0
  140 0000000C E3A01001        mov              r1,#TimerResetTimer0Interrupt
  141 00000010 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  142 00000014         
  143 00000014         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  144 00000014 E59F0018        ldr              r0,=VIC
  145 00000018 E3A01000        mov              r1,#0
  146 0000001C E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  147 00000020         
  148 00000020         ;here we set up the variable so that the main call the s
                       ubroutine we want 
  149 00000020 E59F0010        ldr              r0, =IfInterrupt
  150 00000024 E3A01001        mov              r1, #1
  151 00000028 E5801000        str              r1, [r0]
  152 0000002C         
  153 0000002C         
  154 0000002C E8FD87FF        ldmfd            sp!,{r0-r10,pc}^ ; return from 



ARM Macro Assembler    Page 5 


                                                            interrupt, restorin
                                                            g pc from lr
  155 00000030         ; and also restoring the CPSR
  156 00000030         
  157 00000030 E0004000 
              FFFFF000 
              00000000         AREA             Subroutines, CODE, READONLY
  158 00000000         
  159 00000000                 AREA             Stuff, DATA, READWRITE
  160 00000000         
  161 00000000 00000000 
                       IfInterrupt
                               DCD              0x0
  162 00000004 00      msCount DCB              0
  163 00000005 00 00 00 
              00080000 currentLED
                               DCD              0x00080000
  164 0000000C         
  165 0000000C                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 35 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
not 000000C4

Symbol: not
   Definitions
      At line 114 in file App.s
   Uses
      At line 112 in file App.s
Comment: not used once
start 00000000

Symbol: start
   Definitions
      At line 41 in file App.s
   Uses
      At line 40 in file App.s
Comment: start used once
updateCount 000000D8

Symbol: updateCount
   Definitions
      At line 120 in file App.s
   Uses
      At line 103 in file App.s
Comment: updateCount used once
wloop 0000007C

Symbol: wloop
   Definitions
      At line 91 in file App.s
   Uses
      At line 94 in file App.s
      At line 119 in file App.s
      At line 124 in file App.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 127 in file App.s
   Uses
      None
Comment: InterruptStuff unused
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 128 in file App.s
   Uses
      At line 57 in file App.s
Comment: irqhan used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Subroutines 00000000

Symbol: Subroutines
   Definitions
      At line 157 in file App.s
   Uses
      None
Comment: Subroutines unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

IfInterrupt 00000000

Symbol: IfInterrupt
   Definitions
      At line 161 in file App.s
   Uses
      At line 90 in file App.s
      At line 149 in file App.s

Stuff 00000000

Symbol: Stuff
   Definitions
      At line 159 in file App.s
   Uses
      None
Comment: Stuff unused
currentLED 00000008

Symbol: currentLED
   Definitions
      At line 163 in file App.s
   Uses
      At line 51 in file App.s
      At line 107 in file App.s

msCount 00000004

Symbol: msCount
   Definitions
      At line 162 in file App.s
   Uses
      At line 100 in file App.s
Comment: msCount used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 32 in file App.s
   Uses
      At line 49 in file App.s
      At line 105 in file App.s

IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 30 in file App.s
   Uses
      At line 43 in file App.s
Comment: IO1DIR used once
IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 33 in file App.s
   Uses
      None
Comment: IO1PIN unused
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 31 in file App.s
   Uses
      At line 46 in file App.s
      At line 104 in file App.s

IR 00000000

Symbol: IR
   Definitions
      At line 8 in file App.s
   Uses
      At line 76 in file App.s
      At line 141 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 28 in file App.s
   Uses
      At line 60 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 21 in file App.s
   Uses
      At line 64 in file App.s
Comment: IntEnable used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

MCR 00000014

Symbol: MCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 82 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 11 in file App.s
   Uses
      At line 79 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 5 in file App.s
   Uses
      At line 70 in file App.s
      At line 139 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 6 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 9 in file App.s
   Uses
      At line 73 in file App.s
      At line 85 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 26 in file App.s
   Uses
      At line 27 in file App.s
      At line 60 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 27 in file App.s
   Uses
      At line 63 in file App.s
Comment: Timer0Mask used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

TimerCommandReset 00000002

Symbol: TimerCommandReset
   Definitions
      At line 13 in file App.s
   Uses
      At line 72 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 14 in file App.s
   Uses
      At line 84 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 15 in file App.s
   Uses
      At line 81 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 17 in file App.s
   Uses
      At line 75 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 16 in file App.s
   Uses
      At line 140 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 20 in file App.s
   Uses
      At line 55 in file App.s
      At line 144 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 22 in file App.s
   Uses
      At line 67 in file App.s
      At line 146 in file App.s

VectAddr0 00000100



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: VectAddr0
   Definitions
      At line 23 in file App.s
   Uses
      At line 58 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 24 in file App.s
   Uses
      At line 61 in file App.s
Comment: VectCtrl0 used once
23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 36 in file App.s
   Uses
      None
Comment: main unused
1 symbol
373 symbols in table
